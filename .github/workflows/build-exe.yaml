name: Build EXE with PyInstaller

on: 
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
  workflow_dispatch:  # Allows manual triggering

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          if (Test-Path requirements.txt) { pip install -r requirements.txt }

      - name: Build EXE
        run: |
          pyinstaller --onefile --noconsole cli.py
        shell: cmd

      - name: Upload Executable
        uses: actions/upload-artifact@v4
        with:
          name: built-exe
          path: dist/cli.exe
          
  download:
    needs: build
    runs-on: ubuntu-latest  # Can be any OS since it's just downloading

    steps:
      - name: Download Built EXE
        uses: actions/download-artifact@v4
        with:
          name: built-exe
          path: downloaded-exe

      - name: List Downloaded Files
        run: ls -R downloaded-exe

# Tag Release Workflow        
  tag_release:
    needs: build
    runs-on: ubuntu-latest
    steps:
        - name: Checkout Repository
          uses: actions/checkout@v3
          with:
            fetch-depth: 0  # Required to fetch all tags

        - name: Get Latest Tag
          id: get_version
          run: |
            LATEST_TAG=$(git describe --tags --match "v[0-9]*" --abbrev=0 2>/dev/null || echo "v0.0.0-alpha.0")
            echo "Latest tag: $LATEST_TAG"
            echo "latest_tag=$LATEST_TAG" >> $GITHUB_ENV
            export latest_tag=$LATEST_TAG

        - name: Increment Version
          id: versioning
          run: |
            LATEST_TAG=$latest_tag
            VERSION=$(echo $LATEST_TAG | sed -E 's/v([0-9]+)\.([0-9]+)\.([0-9]+)-alpha\.([0-9]+)/\1 \2 \3 \4/' | awk '{print "v"$1"."$2"."$3"-alpha."$4+1}')
            echo "New version: $VERSION"
            echo "new_version=$VERSION" >> $GITHUB_ENV

        - name: Create New Tag
          run: |
            git config --global user.name "github-actions"
            git config --global user.email "actions@github.com"
            git tag ${{ env.new_version }}
            git push origin ${{ env.new_version }}
# End of Tag Release Workflow
# Start release workflow
  release:
    needs: tag_release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Download Built EXE
        uses: actions/download-artifact@v4
        with:
          name: built-exe
          path: downloaded-exe

      - name: Generate Release Notes
        run: |
            echo "Release: ${{ env.new_version }}" > downloaded-exe/release.txt
            echo "Changes in this release:" >> downloaded-exe/release.txt
            echo "- Auto-generated EXE build." >> downloaded-exe/release.txt
            echo "- Version: ${{ env.new_version }}" >> downloaded-exe/release.txt
            echo "- ${{ github.sha }}" >> downloaded-exe/release.txt
  
      - name: Upload Release Assets
        uses: softprops/action-gh-release@v1
        with:
            tag_name: ${{ env.new_version }}
            name: Release ${{ env.new_version }}
            body_path: downloaded-exe/release.txt
            draft: false
            prerelease: true
            files: |
              downloaded-exe/script.exe
              LICENSE
              downloaded-exe/release.txt